syntax = "proto3";

package com.gongik.userService.domain.service;

service UserService {
  rpc SendEmailVerificationCode(SendEmailVerificationCodeRequest) returns (SendEmailVerificationCodeResponse);

  rpc VerifyEmailCode(VerifyEmailCodeRequest) returns (VerifyEmailCodeResponse);

  rpc FindByEmailForAuth(FindByEmailForAuthRequest) returns (FindByEmailForAuthResponse);

  rpc SignUp(SignUpRequest) returns (SignUpResponse);

  rpc MyProfile(MyProfileRequest) returns (MyProfileResponse);

  rpc UserProfile(UserProfileRequest) returns (UserProfileResponse);

  rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse);

  rpc CheckUserInstitution(CheckUserInstitutionRequest) returns (CheckUserInstitutionResponse);

  rpc GetUserNameById(GetUserNameByIdRequest) returns (GetUserNameByIdResponse);

  rpc GetUserNameByIds(GetUserNameByIdsRequest) returns (GetUserNameByIdsResponse);
}

message SendEmailVerificationCodeRequest {
  string email = 1;
}

message SendEmailVerificationCodeResponse {
  bool success = 1;
}

message VerifyEmailCodeRequest{
  string email = 1;
  string code = 2;
}

message VerifyEmailCodeResponse{
  bool success = 1;
}
message FindByEmailForAuthRequest{
  string email = 1;
}

message FindByEmailForAuthResponse{
  string id = 1;
  string email = 2;
  string password = 3;
  string name = 4;
  optional string bio = 5;
  optional string enlistment_date = 6;
  optional string discharge_date = 7;
  optional InstitutionForAuth institution = 8;

}

message InstitutionForAuth {
  string id = 1;
  string name = 2;
}


message SignUpRequest {
  string name = 1;
  string email = 2;
  string password = 3;
  string confirmPassword = 4;
  string bio = 5;
  string institution_id = 6;
  string enlistment_date = 7;
  string discharge_date = 8;
}

message SignUpResponse {
  SignUpUser user = 1;
  string accessToken = 2;
  string refreshToken = 3;
  string accessTokenExpiresAt = 4;
}

message SignUpUser {
  string id = 1;
  string email = 2;
  optional SignUpInstitution institution = 3;
  string name = 4;
  optional string bio = 5;
  optional string enlistment_date = 6;
  optional string discharge_date = 7;
}

message SignUpInstitution {
  string id = 1;
  string name = 2;
}

message  MyProfileRequest{
  string userId = 1;
}

message MyProfileResponse{
  string id = 1;
  string email = 2;
  string name = 3;
  optional string bio = 4;
  optional string enlistment_date = 5;
  optional string discharge_date = 6;
  optional MyProfileInstitution institution = 7;
}

message MyProfileInstitution {
  string id = 1;
  string name = 2;
}

message UserProfileRequest{
  string userId = 1;
}

message UserProfileResponse{
  string id = 1;
  string name = 3;
  optional string bio = 4;
  optional string enlistment_date = 5;
  optional string discharge_date = 6;
  optional UserProfileInstitution institution = 7;
}

message UserProfileInstitution {
  string id = 1;
  string name = 2;
}

message UpdateProfileRequest{
  string userId = 1;
  optional string name = 2;
  optional string bio = 3;
  optional string enlistment_date = 4;
  optional string discharge_date = 5;
  optional string institution_id = 6;
}

message UpdateProfileResponse{
  string id = 1;
  string email = 2;
  string name = 3;
  optional string bio = 4;
  optional string enlistment_date = 5;
  optional string discharge_date = 6;
  optional UpdateProfileInstitution institution = 7;
}

message UpdateProfileInstitution {
  string id = 1;
  string name = 2;
}

message CheckUserInstitutionRequest {
  string userId = 1;
  string institutionId = 2;
}

message CheckUserInstitutionResponse {
  string userName = 1;
}

message GetUserNameByIdRequest{
  string userId = 1;
}

message GetUserNameByIdResponse{
  string userName = 1;
}

message GetUserNameByIdsRequest{
  repeated string user_ids = 1;
}

message GetUserNameByIdsResponse{
  map<string, string> users = 1; // key: userId, value: name
}


