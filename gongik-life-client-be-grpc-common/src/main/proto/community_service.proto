syntax = "proto3";

package com.gongik.communityService.domain.service;

service CommunityService{
  rpc CreatePost(CreatePostRequest) returns (CreatePostResponse);

  rpc UpdatePost(UpdatePostRequest) returns (UpdatePostResponse);

  rpc DeletePost(DeletePostRequest) returns (DeletePostResponse);

  rpc IsLikedPost(IsLikedPostRequest) returns (IsLikedPostResponse);

  rpc GetPost(GetPostRequest) returns (GetPostResponse);

  rpc IsLikedPostAndCommentCount(IsLikedPostAndCommentCountRequest) returns (IsLikedPostAndCommentCountResponse);

  rpc Posts(PostsRequest) returns (PostsResponse);

  rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse);

  rpc UpdateComment(UpdateCommentRequest) returns (UpdateCommentResponse);

  rpc deleteComment(DeleteCommentRequest) returns (DeleteCommentResponse);

  rpc comments(CommentsRequest) returns (CommentsResponse);

  rpc myPosts(MyPostsRequest) returns (MyPostsResponse);

  rpc userPosts(UserPostsRequest) returns (UserPostsResponse);
}

message CreatePostRequest{
  string userId = 1;
  int32 categoryId = 2;
  string title = 3;
  string content = 4;
}

message CreatePostResponse{
  string id = 1;
  PostUser user = 2;
  int32 categoryId = 3;
  optional string title = 4;
  optional string content = 5;
  int32 likeCount = 6;
  int32 commentCount = 7;
  string createdAt = 8;
}

message PostUser{
  string userId = 1;
  string userName = 2;
}

message UpdatePostRequest{
  string userId = 1;
  string postId = 2;
  optional string title = 3;
  optional string content = 4;
}

message UpdatePostResponse{
  string id = 1;
  PostUser user = 2;
  int32 categoryId = 3;
  string title = 4;
  string content = 5;
  int32 likeCount = 6;
  int32 commentCount = 7;
  string createdAt = 8;
}

message DeletePostRequest{
  string userId = 1;
  string postId = 2;
}

message DeletePostResponse{
  bool success = 2;
}

message IsLikedPostRequest{
  string userId = 1;
  string postId = 2;
}

message IsLikedPostResponse{
  bool isLiked = 1;
}

message GetPostRequest{
  string postId = 1;
}

message GetPostResponse{
  string id = 1;
  PostUser user = 2;
  int32 categoryId = 3;
  string title = 4;
  string content = 5;
  int32 likeCount = 6;
  int32 commentCount = 7;
  string createdAt = 8;
}

message IsLikedPostAndCommentCountRequest{
  optional string userId = 1;
  string postId = 2;
}

message  IsLikedPostAndCommentCountResponse{
  bool isLiked = 1;
  int32 commentCount = 2;
}

message PostsRequest{
  optional string userId = 1;
  int32 postCategoryId = 2;
  optional string cursor = 3;
  int32 pageSize = 4;

}

message PostForList{
  string id = 1;
  PostUser user = 2;
  int32 categoryId = 3;
  string title = 4;
  string content = 5;
  int32 likeCount = 6;
  int32 commentCount = 7;
  string createdAt = 8;
  bool isLiked = 9;
}

message PostsResponse{
  repeated PostForList listPost = 1;
  PageInfo pageInfo = 2;
}

message PageInfo {
  string endCursor = 1;
  bool hasNextPage = 2;
}

message CreateCommentRequest{
  string userId = 1;
  string postId = 2;
  optional string parentCommentId = 3;
  string content = 4;
}

message CreateCommentResponse{
  string id = 1;
  PostUser user = 2;
  string postId = 3;
  optional string parentCommentId = 4;
  string content = 5;
  string createdAt = 6;

}

message UpdateCommentRequest{
  string userId = 1;
  string commentId = 2;
  string content = 3;
}

message UpdateCommentResponse{
  string id = 1;
  bool success = 2;
}

message DeleteCommentRequest{
  string userId = 1;
  string commentId = 2;
}

message DeleteCommentResponse{
  string commentId = 1;
  bool success = 2;
}

message CommentsRequest{
  string postId = 1;
}

message  CommentsResponse{
  repeated CommentForList listComment = 1;
}

message CommentForList{
  string id = 1;
  optional PostUser user = 2;
  string postId = 3;
  optional string parentCommentId = 4;
  optional string content = 5;
  string createdAt = 6;
  repeated CommentForList childComments = 7;
}

message MyPostsRequest{

  string userId = 1;
  optional string cursor = 2;
  int32 pageSize = 3;
}

message MyPostsResponse{
  repeated PostForList listPost = 1;
  PageInfo pageInfo = 2;
}

message UserPostsRequest{
  optional string myUserId = 1;
  string userId = 2;
  optional string cursor = 3;
  int32 pageSize = 4;
}

message  UserPostsResponse{
  repeated PostForList listPost = 1;
  PageInfo pageInfo = 2;
}