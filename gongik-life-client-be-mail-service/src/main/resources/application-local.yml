server:
  port: 8010

spring:
  application:
    name: gongik-life-client-be-mail-service

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true

  data:
    redis:
      host: localhost
      port: 6379
      client-type: lettuce

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: gongik-life-client-be-mail-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    properties:
      auto.create.topics.enable: true


  batch:
    jdbc:
      initialize-schema: always



eureka:
  client:
    service-url:
      defaultZone: http://localhost:8000/eureka/
    registerWithEureka: true
    fetchRegistry: true

management:
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: b3
      produce: b3_multi
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include:
          - info
          - health
          - loggers
          - mappings
          - metrics
          - shutdown
          - prometheus

logging:
  pattern:
    level: "%5p [%X{traceId:-},%X{spanId:-}]"
